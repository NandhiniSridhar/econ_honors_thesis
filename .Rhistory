tab_total_label("Working MIX Market Data")
#i think this achieves the two column effect with the same summary stats for the diff datasets
combined_table <- mf_table %>% merge(working_mf_table)
print(mf_table)
print(working_mf_table)
mf_table
mf_table
View(mf_data)
View(mf_table)
#stats for entire dataset
mfdata_no_null <- mfdata %>% drop_na(Gross_Loan_Portfolio)
mfdata_no_null <- mfdata_no_null %>% drop_na(Percent_of_female_borrowers)
mfdata_no_null <- mfdata_no_null %>% drop_na(`Number_of_active_borrowers_>_Gender_>_Female`)
mfdata_no_null <- mfdata_no_null %>% drop_na(Ratio_GLP_Female)
mfdata_no_null <- mfdata_no_null %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
mf_table <- mfdata_no_null %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_pivot() %>%
tab_total_label("All MIX Market Data")
mf_table
#stats for entire dataset
mfdata_no_null <- mfdata %>% drop_na(Gross_Loan_Portfolio)
mfdata_no_null <- mfdata_no_null %>% drop_na(Percent_of_female_borrowers)
mfdata_no_null <- mfdata_no_null %>% drop_na(`Number_of_active_borrowers_>_Gender_>_Female`)
mfdata_no_null <- mfdata_no_null %>% drop_na(Ratio_GLP_Female)
mfdata_no_null <- mfdata_no_null %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
mf_table <- mfdata_no_null %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_total_label("All MIX Market Data") %>%
tab_pivot()
mf_table
working_mf_interest <- working_mf_interest %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
working_mf_table <- working_mf_interest %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_total_label("Working MIX Market Data")
tab_pivot() %>%
#i think this achieves the two column effect with the same summary stats for the diff datasets
combined_table <- mf_table %>% merge(working_mf_table)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
library(fuzzyjoin) #fuzzy matching of strings
library(lfe) #fixed effects regression
library(fixest) #fixed effects regression
library(expss) #tables
#packages
#lfe - install.packages("lfe")
#fixest - install.packages("fixest")
#expss - install.packages("expss)
setwd("/Users/NandhiniSridhar/Desktop/econ_honors_thesis")
mfdata <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/mix-market-financial-performance-dataset-in-usd.xlsx")
#View(mfdata)
country_data <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/COUNTRY_CODEBOOKmix-market-mfi-company-metadata.xlsx")
#View(country_data)
names(mfdata) <- gsub(' ', '_', names(mfdata))
names(country_data) <- gsub(' ', '_', names(country_data))
ir <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/Interest_Rates.xlsx")
colnames(ir)
cols <- c("Country", "Scale", "Base Year")
for (i in 2000:2021){
cols <- cols %>% append(i)
}
print(cols)
names(ir) <- cols
ir <- ir[6:nrow(ir),]
mfdata['Country'] <- NA
countries <- c()
enter <- c()
ifc <- c()
elsec <- c()
names <- c()
#get the countries of each bank in the mfi dataset
for (i in 1:nrow(mfdata)) {
mfi_name <- mfdata$MFI_Name[i]
enter <- enter %>% append(1)
if(mfi_name %in% country_data$MFI_Name){
ifc <- ifc %>% append(1)
country_name <- country_data$Country[country_data$MFI_Name == mfi_name]
names <- names %>% append(length(country_name))
countries <- countries %>% append(country_name)
#mfdata[i, 'country'] <- country_name
}
else{
elsec <- elsec %>% append(1)
countries <- countries %>% append("NOT FOUND")
}
}
# get rid of ones with multiple countries (would have repeats of the same country for some reason)
names2 <- c()
for(i in 1:length(names)){
if(names[i] == 2){
names2 <- names2 %>% append(1)
cat(names[i], ": ", countries[i], "\n")
countries <- countries[-i]
}
}
#append to mfi dataset
mfdata$Country <- countries
#arrange by MFI name and fiscal year
mfdata <- mfdata %>% filter(Period_Type == "ANN") %>% arrange(MFI_Name, Fiscal_Year)
#mfdata['country_reduced'] <- gsub(",.*", "", mfdata$country)
#mfdata['country_reduced'] <- gsub("\\(.*", "", mfdata$country)
#names(country_data) <- gsub(' ', '_', names(country_data))
mf_interest <- stringdist_join(mfdata, ir,
by='Country',
mode='left',
method = "soundex") %>%
arrange(Country.x)
#Ratio_GLP_Female is the y variable - the percentage of loan money that goes to women borrowers
mf_interest %>% drop_na(`Gross_Loan_Portfolio`)
mf_interest %>% drop_na(`Gross_Loan_Portfolio_>_Gender_>_Female`)
mf_interest$Ratio_GLP_Female = mf_interest$`Gross_Loan_Portfolio_>_Gender_>_Female` / mf_interest$Gross_Loan_Portfolio
mfdata$Ratio_GLP_Female = mfdata$`Gross_Loan_Portfolio_>_Gender_>_Female` / mfdata$Gross_Loan_Portfolio
#encode by region
#World Bank region classifications: Africa, East Asia & the Pacific, Europe & Central Asia, Latin America & The Caribbean, Middle East & North Africa, South Asia
africa <- c("Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cameroon", "Cabo Verde", "Central African Republic", "Chad", "Comoros", "Cote d'Ivore", "Cote d'Ivoire (Ivory Coast)", "Congo", "Congo, Democratic Republic of the","Congo, Republic of the", "Equitorial Guinea", "Eritrea", "Eswatini", "Ethiopia", "Gabon", "Ghana", "Gambia", "Gambia, The", "Guinea", "Guinea-Bissau", "Kenya", "Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritus", "Mozambique", "Nambia", "Niger", "Nigeria", "Rwanda", "Senegal", "Sierra Leone", "Somalia", "South Africa", "South Sudan", "Sudan", "Tanzania", "Togo", "Uganda", "Zambia", "Zimbabwe", "Namibia", "Swaziland")
east_asia_pacific <- c("Cambodia", "China", "China, People's Republic of", "Indonesia", "Korea", "Lao PDR", "Malaysia", "Mongolia", "Myanmar", "Papua New Guinea", "Philippines", "Singapore", "Thailand", "Vietnam", "East Timor", "Laos", "Myanmar (Burma)", "Samoa", "Solomon Islands", "Tonga", "Vanuatu")
europe_central_asia <- c("Albania", "Armenia", "Azerbaijan", "Belarus", "Bosnia and Herzegovina", "Bulgaria", "Croatia", "Georgia", "Hungary", "Kazakhstan", "Kosovo", "Kyrgyzstan", "Moldova", "Montenegro", "Macedonia", "Poland", "Romania", "Russia", "Serbia", "Tajikistan", "Turkey", "Turkmenistan", "Ukraine", "Uzbekistan", "Slovakia")
latin_america_caribbean <- c("Argentina", "Belize", "Bolivia", "Brazil", "Colombia", "Chile", "Costa Rica", "Dominican Republic", "Ecuador", "El Salvador", "Grenada", "Guatemala", "Guyana", "Haiti", "Honduras", "Jamaica", "Mexico", "Nicaragua", "Panama", "Paraguay", "Peru", "Saint Lucia", "Suriname", "Trinidad and Tobago", "Uruguay", "Venezuela", "Fiji")
middle_east_north_africa <- c("Algeria", "Bahrain", "Djibouti", "Egypt", "Iran", "Iraq", "Jordan", "Kuwait", "Lebanon", "Libya", "Morocco", "Oman", "Palestine", "Qatar", "Saudi Arabia", "Syria", "Tunisia", "United Arab Emirates", "Yemen", "Israel")
south_asia <- c("Sri Lanka", "Bangladesh", "India", "Afghanistan", "Pakistan", "Bhutan", "Nepal", "Maldives")
north_america <- c("United States", "Canada")
mfdata <- mfdata %>%
mutate(Region = case_when(
Country %in% africa ~ 'Sub_Saharan_Africa',
Country %in% east_asia_pacific ~ 'East_Asia_Pacific',
Country %in% europe_central_asia ~ 'Europe_Central_Asia',
Country %in% middle_east_north_africa ~ 'Middle_East_North_Africa',
Country %in% north_america ~ 'North_America',
Country %in% latin_america_caribbean ~ 'Latin_America_Caribbean',
Country %in% south_asia ~ 'South_Asia',
TRUE ~ 'Other'))
mf_interest <- mf_interest %>%
mutate(Region = case_when(
Country.x %in% africa ~ 'Sub_Saharan_Africa',
Country.x %in% east_asia_pacific ~ 'East_Asia_Pacific',
Country.x %in% europe_central_asia ~ 'Europe_Central_Asia',
Country.x %in% middle_east_north_africa ~ 'Middle_East_North_Africa',
Country.x %in% north_america ~ 'North_America',
Country.x %in% latin_america_caribbean ~ 'Latin_America_Caribbean',
Country.x %in% south_asia ~ 'South_Asia',
TRUE ~ 'Other'))
x <- mf_interest %>% filter(Region == "Other") %>% select(Country.x)
print(unique(x))
# instrumental variable is the interest rate for a given year
# here i create the variable that can be used as a common instrument (interest rates are originally split one year per column)
# here i only take the interest rate that directly corresponds to the fiscal year for a given entry
mf_interest$Cur_Interest_Rate = 9999 #this is the error code
for(i in 1:nrow(mf_interest)){
year = mf_interest$Fiscal_Year[i]
if(mf_interest$Fiscal_Year[i] != 1999){
if(mf_interest[i, as.character(year)] != "..." & !is.na(mf_interest[i, as.character(year)]) & mf_interest[i, as.character(year)] != "-"){
#print(i)
#print(mf_interest[i, as.character(year)])
mf_interest$Cur_Interest_Rate[i] <- mf_interest[i, as.character(year)]
}
}
#if(suppressWarnings(is.na(as.numeric(mf_interest$Cur_Interest_Rate))[i])){
#  print(mf_interest$Cur_Interest_Rate[i])
#}
}
#unique(mf_interest$Cur_Interest_Rate)
mf_interest$Cur_Interest_Rate <- as.numeric(mf_interest$Cur_Interest_Rate)
mf_interest <- mf_interest %>% drop_na("Gross_Loan_Portfolio")
mf_interest <- mf_interest %>% drop_na("Ratio_GLP_Female")
mf_interest <- mf_interest %>% drop_na("Percent_of_female_borrowers")
working_mf_interest <- mf_interest %>% filter(Cur_Interest_Rate != 9999)
working_mf_interest <- working_mf_interest %>% drop_na("Cur_Interest_Rate")
#run everything above this to clean and preprocess data
#use for GLP, %women borrowers, %GLP to women over time for all data
year_totals_all <- data.frame(matrix(ncol=5, nrow=0))
colnames(year_totals_all) <- c("Fiscal_Year", "Gross_Loan_Portfolio", "Percent_Female_Borrowers", "Fraction_GLP_To_Women", "Number_Female_Borrowers")
min_year_all <- min(mfdata$Fiscal_Year)
max_year_all <- max(mfdata$Fiscal_Year)
year_totals <- data.frame(matrix(ncol=5, nrow=0))
colnames(year_totals) <- c("Fiscal_Year", "Gross_Loan_Portfolio", "Percent_Female_Borrowers", "Fraction_GLP_To_Women", "Number_Female_Borrowers")
min_year <- min(working_mf_interest$Fiscal_Year)
max_year <- max(working_mf_interest$Fiscal_Year)
#stats by year for all data
row <- 1
for(i in min_year_all:max_year_all){
year_totals_all[row, "Fiscal_Year"] <- i
temp <- mfdata %>% filter(Fiscal_Year == i)
temp <- temp %>% drop_na(Gross_Loan_Portfolio)
temp <- temp %>% drop_na(Percent_of_female_borrowers)
temp <- temp %>% drop_na(`Number_of_active_borrowers_>_Gender_>_Female`)
temp <- temp %>% drop_na(Ratio_GLP_Female)
#print(drop_na(temp$Gross_Loan_Portfolio) %>% mean())
year_totals_all[row, "Gross_Loan_Portfolio"] <- mean(temp$Gross_Loan_Portfolio)
year_totals_all[row, "Percent_Female_Borrowers"] <- mean(temp$Percent_of_female_borrowers)
year_totals_all[row, "Number_Female_Borrowers"] <- mean(temp$`Number_of_active_borrowers_>_Gender_>_Female`)
year_totals_all[row, "Fraction_GLP_To_Women"] <- mean(temp$Ratio_GLP_Female)
row = row + 1
}
#stats by year for working data
row <- 1
for(i in min_year:max_year){
year_totals[row, "Fiscal_Year"] <- i
temp <- working_mf_interest %>% filter(Fiscal_Year == i)
year_totals[row, "Gross_Loan_Portfolio"] <- mean(temp$Gross_Loan_Portfolio)
year_totals[row, "Percent_Female_Borrowers"] <- mean(temp$Percent_of_female_borrowers)
year_totals[row, "Number_Female_Borrowers"] <- mean(temp$`Number_of_active_borrowers_>_Gender_>_Female`)
year_totals[row, "Fraction_GLP_To_Women"] <- mean(temp$Ratio_GLP_Female)
row = row + 1
}
print(year_totals_all)
print(year_totals)
#stats for entire dataset
mfdata_no_null <- mfdata %>% drop_na(Gross_Loan_Portfolio)
mfdata_no_null <- mfdata_no_null %>% drop_na(Percent_of_female_borrowers)
mfdata_no_null <- mfdata_no_null %>% drop_na(`Number_of_active_borrowers_>_Gender_>_Female`)
mfdata_no_null <- mfdata_no_null %>% drop_na(Ratio_GLP_Female)
mfdata_no_null <- mfdata_no_null %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
mf_table <- mfdata_no_null %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_total_label("All MIX Market Data") %>%
tab_pivot()
mf_table
working_mf_interest <- working_mf_interest %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
working_mf_table <- working_mf_interest %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_total_label("Working MIX Market Data")
tab_pivot()
working_mf_interest <- working_mf_interest %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
working_mf_table <- working_mf_interest %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_total_label("Working MIX Market Data")
tab_pivot("inner")
#stats for entire dataset
mfdata_no_null <- mfdata %>% drop_na(Gross_Loan_Portfolio)
mfdata_no_null <- mfdata_no_null %>% drop_na(Percent_of_female_borrowers)
mfdata_no_null <- mfdata_no_null %>% drop_na(`Number_of_active_borrowers_>_Gender_>_Female`)
mfdata_no_null <- mfdata_no_null %>% drop_na(Ratio_GLP_Female)
mfdata_no_null <- mfdata_no_null %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
mf_table <- mfdata_no_null %>%
tab_total_label("All MIX Market Data") %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_pivot()
mf_table
working_mf_interest <- working_mf_interest %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
working_mf_table <- working_mf_interest %>%
tab_total_label("Working MIX Market Data")
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_pivot()
working_mf_interest <- working_mf_interest %>% apply_labels(
Gross_Loan_Portfolio = "Gross Loan Portfolio",
Percent_of_female_borrowers = "Percent of Female Borrowers",
Ratio_GLP_Female = "Fraction of GLP to Female Borrowers",
`Number_of_active_borrowers_>_Gender_>_Female` = "Number of Female Borrowers",
Region = "Percent of Data From Regions"
)
working_mf_table <- working_mf_interest %>%
tab_total_label("Working MIX Market Data") %>%
tab_cells(Gross_Loan_Portfolio) %>%
tab_stat_mean() %>%
tab_cells(Percent_of_female_borrowers) %>%
tab_stat_mean() %>%
tab_cells(Ratio_GLP_Female) %>%
tab_stat_mean() %>%
#percent of data from each region
tab_cells(Region) %>%
tab_stat_cpct() %>%
tab_pivot()
#i think this achieves the two column effect with the same summary stats for the diff datasets
combined_table <- mf_table %>% merge(working_mf_table)
#working_mf_table
#mf_table
combined_table
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggplot2)
library(fuzzyjoin) #fuzzy matching of strings
library(lfe) #fixed effects regression
library(fixest) #fixed effects regression
library(expss) #tables
#packages
#lfe - install.packages("lfe")
#fixest - install.packages("fixest")
#expss - install.packages("expss)
setwd("/Users/NandhiniSridhar/Desktop/econ_honors_thesis")
mfdata <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/mix-market-financial-performance-dataset-in-usd.xlsx")
#View(mfdata)
country_data <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/COUNTRY_CODEBOOKmix-market-mfi-company-metadata.xlsx")
#View(country_data)
names(mfdata) <- gsub(' ', '_', names(mfdata))
names(country_data) <- gsub(' ', '_', names(country_data))
ir <- read_excel("/Users/NandhiniSridhar/Desktop/econ_honors_thesis/data/Microfinance/Interest_Rates.xlsx")
colnames(ir)
cols <- c("Country", "Scale", "Base Year")
for (i in 2000:2021){
cols <- cols %>% append(i)
}
print(cols)
names(ir) <- cols
ir <- ir[6:nrow(ir),]
mfdata['Country'] <- NA
countries <- c()
enter <- c()
ifc <- c()
elsec <- c()
names <- c()
#get the countries of each bank in the mfi dataset
for (i in 1:nrow(mfdata)) {
mfi_name <- mfdata$MFI_Name[i]
enter <- enter %>% append(1)
if(mfi_name %in% country_data$MFI_Name){
ifc <- ifc %>% append(1)
country_name <- country_data$Country[country_data$MFI_Name == mfi_name]
names <- names %>% append(length(country_name))
countries <- countries %>% append(country_name)
#mfdata[i, 'country'] <- country_name
}
else{
elsec <- elsec %>% append(1)
countries <- countries %>% append("NOT FOUND")
}
}
# get rid of ones with multiple countries (would have repeats of the same country for some reason)
names2 <- c()
for(i in 1:length(names)){
if(names[i] == 2){
names2 <- names2 %>% append(1)
cat(names[i], ": ", countries[i], "\n")
countries <- countries[-i]
}
}
#append to mfi dataset
mfdata$Country <- countries
#arrange by MFI name and fiscal year
mfdata <- mfdata %>% filter(Period_Type == "ANN") %>% arrange(MFI_Name, Fiscal_Year)
#mfdata['country_reduced'] <- gsub(",.*", "", mfdata$country)
#mfdata['country_reduced'] <- gsub("\\(.*", "", mfdata$country)
#names(country_data) <- gsub(' ', '_', names(country_data))
mf_interest <- stringdist_join(mfdata, ir,
by='Country',
mode='left',
method = "soundex") %>%
arrange(Country.x)
#Ratio_GLP_Female is the y variable - the percentage of loan money that goes to women borrowers
mf_interest %>% drop_na(`Gross_Loan_Portfolio`)
mf_interest %>% drop_na(`Gross_Loan_Portfolio_>_Gender_>_Female`)
mf_interest$Ratio_GLP_Female = mf_interest$`Gross_Loan_Portfolio_>_Gender_>_Female` / mf_interest$Gross_Loan_Portfolio
mfdata$Ratio_GLP_Female = mfdata$`Gross_Loan_Portfolio_>_Gender_>_Female` / mfdata$Gross_Loan_Portfolio
#encode by region
#World Bank region classifications: Africa, East Asia & the Pacific, Europe & Central Asia, Latin America & The Caribbean, Middle East & North Africa, South Asia
africa <- c("Angola", "Benin", "Botswana", "Burkina Faso", "Burundi", "Cameroon", "Cabo Verde", "Central African Republic", "Chad", "Comoros", "Cote d'Ivore", "Cote d'Ivoire (Ivory Coast)", "Congo", "Congo, Democratic Republic of the","Congo, Republic of the", "Equitorial Guinea", "Eritrea", "Eswatini", "Ethiopia", "Gabon", "Ghana", "Gambia", "Gambia, The", "Guinea", "Guinea-Bissau", "Kenya", "Lesotho", "Liberia", "Madagascar", "Malawi", "Mali", "Mauritus", "Mozambique", "Nambia", "Niger", "Nigeria", "Rwanda", "Senegal", "Sierra Leone", "Somalia", "South Africa", "South Sudan", "Sudan", "Tanzania", "Togo", "Uganda", "Zambia", "Zimbabwe", "Namibia", "Swaziland")
east_asia_pacific <- c("Cambodia", "China", "China, People's Republic of", "Indonesia", "Korea", "Lao PDR", "Malaysia", "Mongolia", "Myanmar", "Papua New Guinea", "Philippines", "Singapore", "Thailand", "Vietnam", "East Timor", "Laos", "Myanmar (Burma)", "Samoa", "Solomon Islands", "Tonga", "Vanuatu")
europe_central_asia <- c("Albania", "Armenia", "Azerbaijan", "Belarus", "Bosnia and Herzegovina", "Bulgaria", "Croatia", "Georgia", "Hungary", "Kazakhstan", "Kosovo", "Kyrgyzstan", "Moldova", "Montenegro", "Macedonia", "Poland", "Romania", "Russia", "Serbia", "Tajikistan", "Turkey", "Turkmenistan", "Ukraine", "Uzbekistan", "Slovakia")
latin_america_caribbean <- c("Argentina", "Belize", "Bolivia", "Brazil", "Colombia", "Chile", "Costa Rica", "Dominican Republic", "Ecuador", "El Salvador", "Grenada", "Guatemala", "Guyana", "Haiti", "Honduras", "Jamaica", "Mexico", "Nicaragua", "Panama", "Paraguay", "Peru", "Saint Lucia", "Suriname", "Trinidad and Tobago", "Uruguay", "Venezuela", "Fiji")
middle_east_north_africa <- c("Algeria", "Bahrain", "Djibouti", "Egypt", "Iran", "Iraq", "Jordan", "Kuwait", "Lebanon", "Libya", "Morocco", "Oman", "Palestine", "Qatar", "Saudi Arabia", "Syria", "Tunisia", "United Arab Emirates", "Yemen", "Israel")
south_asia <- c("Sri Lanka", "Bangladesh", "India", "Afghanistan", "Pakistan", "Bhutan", "Nepal", "Maldives")
north_america <- c("United States", "Canada")
mfdata <- mfdata %>%
mutate(Region = case_when(
Country %in% africa ~ 'Sub_Saharan_Africa',
Country %in% east_asia_pacific ~ 'East_Asia_Pacific',
Country %in% europe_central_asia ~ 'Europe_Central_Asia',
Country %in% middle_east_north_africa ~ 'Middle_East_North_Africa',
Country %in% north_america ~ 'North_America',
Country %in% latin_america_caribbean ~ 'Latin_America_Caribbean',
Country %in% south_asia ~ 'South_Asia',
TRUE ~ 'Other'))
mf_interest <- mf_interest %>%
mutate(Region = case_when(
Country.x %in% africa ~ 'Sub_Saharan_Africa',
Country.x %in% east_asia_pacific ~ 'East_Asia_Pacific',
Country.x %in% europe_central_asia ~ 'Europe_Central_Asia',
Country.x %in% middle_east_north_africa ~ 'Middle_East_North_Africa',
Country.x %in% north_america ~ 'North_America',
Country.x %in% latin_america_caribbean ~ 'Latin_America_Caribbean',
Country.x %in% south_asia ~ 'South_Asia',
TRUE ~ 'Other'))
x <- mf_interest %>% filter(Region == "Other") %>% select(Country.x)
print(unique(x))
# instrumental variable is the interest rate for a given year
# here i create the variable that can be used as a common instrument (interest rates are originally split one year per column)
# here i only take the interest rate that directly corresponds to the fiscal year for a given entry
mf_interest$Cur_Interest_Rate = 9999 #this is the error code
for(i in 1:nrow(mf_interest)){
year = mf_interest$Fiscal_Year[i]
if(mf_interest$Fiscal_Year[i] != 1999){
if(mf_interest[i, as.character(year)] != "..." & !is.na(mf_interest[i, as.character(year)]) & mf_interest[i, as.character(year)] != "-"){
#print(i)
#print(mf_interest[i, as.character(year)])
mf_interest$Cur_Interest_Rate[i] <- mf_interest[i, as.character(year)]
}
}
#if(suppressWarnings(is.na(as.numeric(mf_interest$Cur_Interest_Rate))[i])){
#  print(mf_interest$Cur_Interest_Rate[i])
#}
}
#unique(mf_interest$Cur_Interest_Rate)
mf_interest$Cur_Interest_Rate <- as.numeric(mf_interest$Cur_Interest_Rate)
mf_interest <- mf_interest %>% drop_na("Gross_Loan_Portfolio")
mf_interest <- mf_interest %>% drop_na("Ratio_GLP_Female")
mf_interest <- mf_interest %>% drop_na("Percent_of_female_borrowers")
working_mf_interest <- mf_interest %>% filter(Cur_Interest_Rate != 9999)
working_mf_interest <- working_mf_interest %>% drop_na("Cur_Interest_Rate")
